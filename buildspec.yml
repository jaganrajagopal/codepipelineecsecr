version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - - docker login --username $DOCKERHUB_USERNAME --password $DOCKERHUB_PASS
      #- $(aws ecr get-login-password --region $AWS_DEFAULT_REGION) | docker login --username AWS --password-stdin 691108211638.dkr.ecr.us-east-1.amazonaws.com/dotnetapps
      
      #- $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
      #- $(aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin aws_account_id.dkr.ecr.region.amazonaws.com)
      - echo $IMAGE_URI
      - echo $IMAGE_REPO_NAME
      #- COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      #- IMAGE_TAG=$(COMMIT_HASH:=latest)
  build:
    commands:
      - echo Restoring dependencies...
      #- dotnet restore
      - echo Building the application...
      #- dotnet build -c Release
      - echo Publishing the application...
      #- dotnet publish -c Release -o ./publish
      - echo Building the Docker image...
     
      - docker build -t $IMAGE_URI:latest .
      - echo Tagging image with tag "$IMAGE_TAG"...
      - docker tag $IMAGE_URI:latest $IMAGE_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Pushing the Docker image to Amazon ECR...
      - docker push $IMAGE_URI:$IMAGE_TAG

artifacts:
  files: imagedefinitions.json


env:
  variables:
    AWS_DEFAULT_REGION: "us-east-1"
    IMAGE_REPO_NAME: "dotnetapps"
    $IMAGE_URI: "691108211638.dkr.ecr.us-east-1.amazonaws.com/dotnetapps"
    #ECS_CLUSTER_NAME: "<Your ECS Cluster Name>"
